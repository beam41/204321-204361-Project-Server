{"version":3,"sources":["../../src/routes/plan.ts"],"names":["router","get","requireJWTAuth","extractIdJwt","req","res","user","params","id","userType","then","val","console","log","Date","toUTCString","colors","bold","send","err","error","red","status","put","body","CourseID","Year","Term","EditedGrade"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAc,GAAG,sBAAvB;AAEAA,MAAM,CAACC,GAAP,CAAW,MAAX,EAAmBC,oBAAnB,EAAmCC,kBAAnC,EAAiD,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7D;AACA,MAAID,GAAG,CAACE,IAAJ,KAAaF,GAAG,CAACG,MAAJ,CAAWC,EAAxB,IAA8BJ,GAAG,CAACK,QAAJ,KAAiB,SAAnD,EACE,sBAASL,GAAG,CAACG,MAAJ,CAAWC,EAApB,EACGE,IADH,CACQ,UAAAC,GAAG,EAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CACE,MACE,IAAIC,IAAJ,GAAWC,WAAX,EADF,GAEE,IAFF,GAGE,YAHF,GAIE,OAJF,GAKE;AACAC,qBAAOC,IAAP,CAAYb,GAAG,CAACE,IAAhB,CANF,GAOE,QAPF,IAQGF,GAAG,CAACE,IAAJ,KAAaF,GAAG,CAACG,MAAJ,CAAWC,EAAxB,GAA6B,OAA7B,GAAuCJ,GAAG,CAACG,MAAJ,CAAWC,EARrD,IASE,OAVJ;AAYAH,IAAAA,GAAG,CAACa,IAAJ,CAASP,GAAT;AACD,GAfH,WAgBS,UAAAQ,GAAG;AAAA,WAAIP,OAAO,CAACQ,KAAR,CAAcJ,iBAAOK,GAAP,CAAWF,GAAX,CAAd,CAAJ;AAAA,GAhBZ,EADF,KAkBKd,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB;AACN,CArBD;AAuBAlB,MAAM,CAACuB,GAAP,CAAW,MAAX,EAAmBrB,oBAAnB,EAAmCC,kBAAnC,EAAiD,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7D;AACA,MAAID,GAAG,CAACE,IAAJ,KAAaF,GAAG,CAACG,MAAJ,CAAWC,EAA5B,EAAgC;AAC9B;AACA,mCACEJ,GAAG,CAACG,MAAJ,CAAWC,EADb,EAEEJ,GAAG,CAACoB,IAAJ,CAASC,QAFX,EAGErB,GAAG,CAACoB,IAAJ,CAASE,IAHX,EAIEtB,GAAG,CAACoB,IAAJ,CAASG,IAJX,EAKEvB,GAAG,CAACoB,IAAJ,CAASI,WALX,EAMElB,IANF,CAMO,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CACE,MACE,IAAIC,IAAJ,GAAWC,WAAX,EADF,GAEE,IAFF,GAGE,YAHF,GAIE,OAJF,GAKE;AACAC,uBAAOC,IAAP,CAAYb,GAAG,CAACE,IAAhB,CANF,GAOE,mBAPF,GAQEU,iBAAOC,IAAP,CAAYN,GAAG,CAACiB,WAAhB,CARF,GASE,UAVJ;AAYAvB,MAAAA,GAAG,CAACa,IAAJ,CAASP,GAAT;AACD,KApBD;AAqBD,GAvBD,MAuBON,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB;AACR,CA1BD;eA4BelB,M","sourcesContent":["import { Router } from \"express\"\nimport { getPlans } from \"../databases/select\"\nimport colors from \"colors/safe\"\nimport { requireJWTAuth, extractIdJwt } from \"./auth\"\nimport { updateEditedGrade } from \"../databases/update\"\n\nconst router: Router = Router()\n\nrouter.get(\"/:id\", requireJWTAuth, extractIdJwt, (req, res) => {\n  // @ts-ignore\n  if (req.user === req.params.id || req.userType === \"advisor\")\n    getPlans(req.params.id)\n      .then(val => {\n        console.log(\n          \"[\" +\n            new Date().toUTCString() +\n            \"] \" +\n            \"[Express] \" +\n            \"User \" +\n            // @ts-ignore\n            colors.bold(req.user) +\n            \" gets \" +\n            (req.user === req.params.id ? \"their\" : req.params.id) +\n            \" plan\",\n        )\n        res.send(val)\n      })\n      .catch(err => console.error(colors.red(err)))\n  else res.status(403).send()\n})\n\nrouter.put(\"/:id\", requireJWTAuth, extractIdJwt, (req, res) => {\n  // @ts-ignore\n  if (req.user === req.params.id) {\n    // @ts-ignore\n    updateEditedGrade(\n      req.params.id,\n      req.body.CourseID,\n      req.body.Year,\n      req.body.Term,\n      req.body.EditedGrade,\n    ).then(val => {\n      console.log(\n        \"[\" +\n          new Date().toUTCString() +\n          \"] \" +\n          \"[Express] \" +\n          \"User \" +\n          // @ts-ignore\n          colors.bold(req.user) +\n          \" edited grade to \" +\n          colors.bold(val.EditedGrade) +\n          \" in plan\",\n      )\n      res.send(val)\n    })\n  } else res.status(403).send()\n})\n\nexport default router\n"],"file":"plan.js"}