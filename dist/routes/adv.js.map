{"version":3,"sources":["../../src/routes/adv.ts"],"names":["router","get","requireJWTAuth","extractIdJwt","req","res","userType","user","stdlist","list","map","val","StudentID","chat","latestChat","length","Promise","all","then","send","status"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,MAAc,GAAG,sBAAvB;AAEAA,MAAM,CAACC,GAAP,CAAW,QAAX,EAAqBC,oBAArB,EAAqCC,kBAArC;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmD,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAE7CD,GAAG,CAACE,QAAJ,KAAiB,SAF4B;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIzB,wBAAWF,GAAG,CAACG,IAAf,CAJyB;;AAAA;AAIzCC,YAAAA,OAJyC;AAK3CC,YAAAA,IAL2C,GAKpCD,OAAO,CAACE,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAY,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEF,qBAAQA,GAAG,CAACC,SAAZ,EAAuBR,GAAG,CAACG,IAA3B,EAAiC,CAAjC,CAFE;;AAAA;AAEfM,wBAAAA,IAFe;AAAA,2EAGTF,GAHS;AAGJG,0BAAAA,UAAU,EAAED,IAAI,CAACA,IAAI,CAACE,MAAL,GAAc,CAAf;AAHZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAZ;;AAAA;AAAA;AAAA;AAAA,gBALoC;AAU/CC,YAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ,EAAkBS,IAAlB,CAAuB,UAAAP,GAAG;AAAA,qBAAIN,GAAG,CAACc,IAAJ,CAASR,GAAT,CAAJ;AAAA,aAA1B;AAV+C;AAAA;;AAAA;AAW1CN,YAAAA,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBD,IAAhB;;AAX0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnD;;AAAA;AAAA;AAAA;AAAA;eAcenB,M","sourcesContent":["import { Router } from \"express\"\nimport { requireJWTAuth, extractIdJwt } from \"./auth\"\nimport { getStuList, getChat } from \"../databases/select\"\n\nconst router: Router = Router()\n\nrouter.get(\"/stuli\", requireJWTAuth, extractIdJwt, async (req, res) => {\n  // @ts-ignore\n  if (req.userType === \"advisor\") {\n    // @ts-ignore\n    const stdlist = await getStuList(req.user)\n    let list = stdlist.map(async val => {\n      // @ts-ignore\n      const chat = await getChat(val.StudentID, req.user, 0)\n      return { ...val, latestChat: chat[chat.length - 1] }\n    })\n    Promise.all(list).then(val => res.send(val))\n  } else res.status(403).send()\n})\n\nexport default router\n"],"file":"adv.js"}