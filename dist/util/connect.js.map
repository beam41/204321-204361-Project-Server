{"version":3,"sources":["../../src/util/connect.ts"],"names":["axios","_axios","create","baseURL","process","env","REGURL","fetchUser","get","then","value","data","err","console","error","colors","red","fetchPlan","id","fetchCourse"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,KAAK,GAAGC,mBAAOC,MAAP,CAAc;AAC1BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADK,CAAd,CAAd;AAIA;;;;;;;;AAMO,SAASC,SAAT,GAAqB;AAC1BP,EAAAA,KAAK,CAACQ,GAAN,CAAU,QAAV,EAAoBC,IAApB,CACE,UAAAC,KAAK,EAAI;AACP,6BAAYA,KAAK,CAACC,IAAlB;AACD,GAHH,EAIE,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,KAAR,CAAcC,iBAAOC,GAAP,CAAWJ,GAAX,CAAd,CAAJ;AAAA,GAJL;AAMD;AAED;;;;;;;;;;AAQO,SAASK,SAAT,CAAmBC,EAAnB,EAAgC;AACrClB,EAAAA,KAAK,CAACQ,GAAN,kBAAoBU,EAAE,GAAGA,EAAH,GAAQ,EAA9B,GAAoCT,IAApC,CACE,UAAAC,KAAK,EAAI;AACP,6BAAYA,KAAK,CAACC,IAAlB;AACD,GAHH,EAIE,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,KAAR,CAAcC,iBAAOC,GAAP,CAAWJ,GAAX,CAAd,CAAJ;AAAA,GAJL;AAMD;AAED;;;;;;;;AAMO,SAASO,WAAT,GAAuB;AAC5BnB,EAAAA,KAAK,CAACQ,GAAN,CAAU,UAAV,EAAsBC,IAAtB,CACE,UAAAC,KAAK,EAAI;AACP,+BAAcA,KAAK,CAACC,IAApB;AACD,GAHH,EAIE,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,KAAR,CAAcC,iBAAOC,GAAP,CAAWJ,GAAX,CAAd,CAAJ;AAAA,GAJL;AAMD","sourcesContent":["import _axios from \"axios\"\nimport colors from \"colors/safe\"\nimport { insertCourses, insertUsers, insertPlans } from \"../databases/insert\"\n\nconst axios = _axios.create({\n  baseURL: process.env.REGURL,\n})\n\n/**\n * fetching new user\n *\n * this method need manually running by remote reg server\n *\n */\nexport function fetchUser() {\n  axios.get(\"/users\").then(\n    value => {\n      insertUsers(value.data)\n    },\n    err => console.error(colors.red(err)),\n  )\n}\n\n/**\n * fetch student plan\n *\n * this method is run if user plan is not cached (with id) <-- maybe, not implement yet\n *\n * it's can be manually run by remote regserver\n *\n */\nexport function fetchPlan(id?: string) {\n  axios.get(`/plans/${id ? id : \"\"}`).then(\n    value => {\n      insertPlans(value.data)\n    },\n    err => console.error(colors.red(err)),\n  )\n}\n\n/**\n * fetch course and cache on server\n *\n * it's can be manually run by remote regserver\n *\n */\nexport function fetchCourse() {\n  axios.get(\"/courses\").then(\n    value => {\n      insertCourses(value.data)\n    },\n    err => console.error(colors.red(err)),\n  )\n}\n"],"file":"connect.js"}