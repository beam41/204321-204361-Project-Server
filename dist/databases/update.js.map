{"version":3,"sources":["../../src/databases/update.ts"],"names":["updateEditedGrade","stuID","courseID","year","term","eGrade","Promise","resolve","reject","db","serialize","exec","err","console","error","colors","red","message","get","row"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;;;SAEsBA,iB;;;;;;;0BAAf,iBACLC,KADK,EAELC,QAFK,EAGLC,IAHK,EAILC,IAJK,EAKLC,MALK;AAAA;AAAA;AAAA;AAAA;AAAA,6CAOE,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;AAAA,qBACjBC,UAAGC,SAAH,CAAa,YAAM;AACjBD,0BAAGE,IAAH,qDAEoCN,MAFpC,uCAGmBJ,KAHnB,oCAIgBC,QAJhB,mCAKaC,IALb,8BAMWC,IANX,eAQE,UAAAQ,GAAG,EAAI;AACL,sBAAIA,GAAJ,EAASC,OAAO,CAACC,KAAR,CAAcC,iBAAOC,GAAP,CAAWJ,GAAG,CAACK,OAAf,CAAd;AACV,iBAVH;;AAYAR,0BAAGS,GAAH,gLAKuBjB,KALvB,0CAMsBC,QANtB,yCAOmBC,IAPnB,oCAQiBC,IARjB,eAUE,UAACQ,GAAD,EAAMO,GAAN,EAAc;AACZ,sBAAIP,GAAJ,EAASJ,MAAM,CAACI,GAAD,CAAN;AACTL,kBAAAA,OAAO,CAACY,GAAD,CAAP;AACD,iBAbH;AAeD,eA5BD,CADiB;AAAA,aAAZ,CAPF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { db } from \"./index\"\nimport { Course } from \"../models\"\nimport colors from \"colors/safe\"\n\nexport async function updateEditedGrade(\n  stuID: string,\n  courseID: string,\n  year: number,\n  term: number,\n  eGrade: string,\n): Promise<Course> {\n  return new Promise((resolve, reject) =>\n    db.serialize(() => {\n      db.exec(\n        `\n      UPDATE STDPLAN SET EditedGrade = '${eGrade}'\n      WHERE StudentID='${stuID}'\n      AND CourseID='${courseID}'\n      AND \"Year\"=${year}\n      AND Term=${term}\n      `,\n        err => {\n          if (err) console.error(colors.red(err.message))\n        },\n      )\n      db.get(\n        `\n      SELECT P.CourseID, P.\"Year\", P.Term, P.EditedGrade\n      FROM STDPLAN P\n      INNER JOIN COURSE C ON P.CourseID = C.CourseID\n      WHERE P.StudentID = '${stuID}'\n      AND   P.CourseID = '${courseID}'\n      AND   P.\"Year\" = ${year}\n      AND   P.Term = ${term}\n      `,\n        (err, row) => {\n          if (err) reject(err)\n          resolve(row)\n        },\n      )\n    }),\n  )\n}\n"],"file":"update.js"}