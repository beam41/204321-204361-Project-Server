{"version":3,"sources":["serviceWorker.js","Redux/Actions/chatAction.ts","Redux/Actions/advAction.ts","Service/adv-service.ts","Service/chat-service.ts","Redux/Reducers/login.ts","Redux/Reducers/table.ts","Redux/Reducers/chat.ts","Redux/Reducers/adv.ts","Redux/Reducers/index.ts","Redux/Actions/loginAction.ts","Service/login-service.ts","Components/Login-page/Login-form/Login-form.tsx","Components/Login-page/Login-page.tsx","Redux/Actions/tableAction.ts","Service/table-service.ts","Components/Table-page/Table-ele.tsx","Service/calc.ts","Components/Table-page/Table-full.tsx","Components/Table-page/Table-form.tsx","Components/Table-page/Table-page.tsx","Components/Chat-page/Message-box.tsx","Components/Chat-page/Chat-student-form.tsx","Components/Navbar/Navbar-end/Navbar-end.tsx","Components/Navbar/Nav-for-table/Nav-for-table.tsx","Components/Navbar/Navbar.tsx","Components/Advisor-page/Student-box.tsx","Components/Advisor-page/Advisor-Std.tsx","Components/Advisor-page/Advisor-chatbox.tsx","Components/Advisor-page/Advisor-chat.tsx","Components/Advisor-page/Adv.-lottie.tsx","Components/Advisor-page/Advisor-page.tsx","Components/App/App.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","getChat","createAction","chat","payload","replaceChat","replaceUser","student","changeCurr","curr","axios","_axios","create","baseURL","origin","getStudent","dispatch","get","headers","Authorization","store","getState","login","jwt","res","actions","data","err","socket","io","sendMessage","to","Message","post","Time","Date","now","val","emit","username","message","getNew","usn","latest","length","later","sort","a","b","getTooNew","on","userType","adv","createReducer","isOnProgress","isLogin","isError","errInfo","resumeSession","action","Cookies","name","loginStart","loginSuccess","expireOn","set","expires","open","loginError","logoutStart","logoutSuccess","remove","close","table","maxYear","tableLoadStart","tableLoadSuccess","map","Year","reduce","Math","max","tableLoadError","updateEditedGrade","newTable","ele","CourseID","course","EditedGrade","newChat","haveNew","readNew","combineReducers","connect","password","className","onSubmit","e","preventDefault","value","trim","status","response","loggingIn","type","ref","node","LoginPage","React","Component","upEditGrade","c","element","CourseName","CourseCredit","Grade","Term","useState","text","setText","onChange","event","upper","target","toUpperCase","includes","put","supdate","GradeAvg","arr","TotalCredit","TotalPoint","i","toFixed","sumCre","credit","forEach","dateChat","time","d","setHours","t","getTime","getHours","toString","padStart","getMinutes","getDate","getMonth","getFullYear","slice","tid","courses","sortCourses","id","index","key","mapped","avg","cre","colSpan","sumGrade","allTable","filter","sumAll","TableForm","this","props","getTable","tab","year","tables","j","term","push","LoopTable","ownProps","TablePage","useParams","mes","SentBy","ChatStudentForm","messagesEnd","handleKeyPress","handleSubmit","scrollToBottom","scrollIntoView","behavior","handleChange","bind","setState","send","onKeyPress","onClick","style","float","clear","el","isTablepage","_","href","Navbar","active","handleToggle","isTablePage","role","aria-label","aria-expanded","data-target","aria-hidden","StdBox","per","StudentID","pid","PerFailed","StdName","AdvStd","stdGet","students","AdvChatBox","std","find","StdSurname","AdvLottieControl","options","animationData","animation","width","App","resume","exact","path","SmoothScroll","speed","easing","clip","offset","preloadedState","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","ReactDOM","render","document","getElementById","URL","process","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4ff41ca2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createAction } from \"redux-starter-kit\";\r\n\r\nexport const haveNew = createAction(\"haveNew\");\r\n\r\nexport const readNew = createAction(\"readNew\");\r\n\r\nexport const getChat = createAction(\"getChat\", chat => {\r\n  return {\r\n    payload: {\r\n      chat\r\n    }\r\n  };\r\n});\r\n\r\nexport const replaceChat = createAction(\"replaceChat\", chat => {\r\n  return {\r\n    payload: {\r\n      chat\r\n    }\r\n  };\r\n});\r\n","import { createAction } from \"redux-starter-kit\";\r\n\r\nexport const replaceUser = createAction(\"replaceUser\", student => {\r\n  return {\r\n    payload: {\r\n      student\r\n    }\r\n  };\r\n});\r\n\r\nexport const changeCurr = createAction(\"changeCurr\", curr => {\r\n  return {\r\n    payload: {\r\n      curr\r\n    }\r\n  };\r\n});\r\n","import _axios from \"axios\";\nimport * as actions from \"../Redux/Actions/advAction\";\nimport { store } from \"../index\";\n\nconst axios = _axios.create({\n  //baseURL: \"http://localhost:4000/api/adv\"\n  baseURL: window.location.origin + \"/api/adv\"\n});\n\nexport function getStudent() {\n  return dispatch => {\n    axios\n      .get(\"/stuli\", {\n        headers: { Authorization: store.getState().login.jwt }\n      })\n      .then(res => {\n        dispatch(actions.replaceUser(res.data));\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n}\n","import io from \"socket.io-client\";\nimport _axios from \"axios\";\nimport { store } from \"../index\";\nimport { getChat, replaceChat } from \"../Redux/Actions/chatAction\";\nimport { getStudent } from \"./adv-service\";\n\nexport const socket = io(window.location.origin);\nconst axios = _axios.create({\n  //baseURL: \"http://localhost:4000/api/chat\"\n  baseURL: window.location.origin + \"/api/chat\"\n});\n\nsocket.on(\"msg\", data => {\n  if (data === \"new\") {\n    if (store.getState().login.userType === \"student\") store.dispatch(getNew());\n    else {\n      store.dispatch(getStudent());\n      const curr = store.getState().adv.curr;\n      if (curr) store.dispatch(getNew(curr));\n    }\n  }\n});\n\nexport function sendMessage(to: string, Message: string) {\n  return dispatch => {\n    axios\n      .post(\n        \"/\",\n        {\n          to,\n          Time: Date.now(),\n          Message\n        },\n        {\n          headers: { Authorization: store.getState().login.jwt }\n        }\n      )\n      .then(val => {\n        dispatch(getChat(val.data));\n      });\n    socket.emit(\"msgTo\", {\n      username: to,\n      message: \"new\"\n    });\n  };\n}\n\nexport function getNew(usn?: string) {\n  const chat: any[] = store.getState().chat.chat;\n  let latest = 0;\n  if (chat.length > 0) {\n    const later = [...chat];\n    later.sort((a, b) => {\n      return a.Time - b.Time;\n    });\n    latest = later[later.length - 1].Time;\n  }\n  return dispatch => {\n    axios\n      .get(`/${usn ? usn : \"\"}?latest=${latest}`, {\n        headers: { Authorization: store.getState().login.jwt }\n      })\n      .then(val => {\n        dispatch(getChat(val.data));\n      });\n  };\n}\n\nexport function getTooNew(usn?: string) {\n  return dispatch => {\n    axios\n      .get(`/${usn ? usn : \"\"}?latest=0`, {\n        headers: { Authorization: store.getState().login.jwt }\n      })\n      .then(val => {\n        dispatch(replaceChat(val.data));\n      });\n  };\n}\n","import { createReducer } from \"redux-starter-kit\";\r\nimport Cookies from \"js-cookie\";\r\nimport { socket } from \"../../Service/chat-service\";\r\n\r\nconst defaultState = {\r\n  jwt: null,\r\n  isOnProgress: false,\r\n  isLogin: false,\r\n  isError: false,\r\n  errInfo: null,\r\n  username: null,\r\n  userType: null,\r\n  adv: null\r\n};\r\n\r\nconst login = createReducer(defaultState, {\r\n  resumeSession: (state, action) => {\r\n    if (Cookies.get(\"username\")) {\r\n      socket.emit(\"tellname\", {\r\n        name: Cookies.get(\"username\")\r\n      });\r\n      return {\r\n        ...state,\r\n        isLogin: true,\r\n        jwt: Cookies.get(\"jwt\"),\r\n        username: Cookies.get(\"username\"),\r\n        userType: Cookies.get(\"userType\"),\r\n        adv: Cookies.get(\"adv\")\r\n      };\r\n    } else return state;\r\n  },\r\n  loginStart: (state, action) => {\r\n    return {\r\n      ...state,\r\n      isOnProgress: true,\r\n      isLogin: false,\r\n      isError: false,\r\n      jwt: null,\r\n      errInfo: null,\r\n      username: null,\r\n      userType: null,\r\n      adv: null\r\n    };\r\n  },\r\n  loginSuccess: (state, action) => {\r\n    const { username, jwt, userType, expireOn, adv } = action.payload;\r\n    Cookies.set(\"username\", username, { expires: new Date(expireOn * 1000) });\r\n    Cookies.set(\"jwt\", jwt, { expires: new Date(expireOn * 1000) });\r\n    Cookies.set(\"userType\", userType, { expires: new Date(expireOn * 1000) });\r\n    Cookies.set(\"adv\", adv, { expires: new Date(expireOn * 1000) });\r\n    socket.open();\r\n    socket.emit(\"tellname\", {\r\n      name: username\r\n    });\r\n    return {\r\n      ...state,\r\n      isOnProgress: false,\r\n      isLogin: true,\r\n      username,\r\n      jwt,\r\n      userType,\r\n      adv\r\n    };\r\n  },\r\n  loginError: (state, action) => {\r\n    return {\r\n      ...state,\r\n      isOnProgress: false,\r\n      isError: true,\r\n      errInfo: action.payload.errInfo\r\n    };\r\n  },\r\n  logoutStart: (state, action) => {\r\n    return {\r\n      ...state,\r\n      isOnProgress: true\r\n    };\r\n  },\r\n  logoutSuccess: (state, action) => {\r\n    Cookies.remove(\"jwt\");\r\n    Cookies.remove(\"username\");\r\n    Cookies.remove(\"userType\");\r\n    Cookies.remove(\"adv\");\r\n    socket.close();\r\n    return {\r\n      ...state,\r\n      jwt: null,\r\n      isOnProgress: false,\r\n      isLogin: false,\r\n      isError: false,\r\n      errInfo: null,\r\n      username: null,\r\n      userType: null,\r\n      adv: null\r\n    };\r\n  }\r\n});\r\n\r\nexport default login;\r\n","import { createReducer } from \"redux-starter-kit\";\r\n\r\nconst defaultState = {\r\n  table: null,\r\n  isOnProgress: false,\r\n  isError: false,\r\n  maxYear: null\r\n};\r\n\r\nconst table = createReducer(defaultState, {\r\n  tableLoadStart: (state, action) => {\r\n    return {\r\n      ...state,\r\n      table: null,\r\n      isOnProgress: true,\r\n      isError: false,\r\n      maxYear: null\r\n    };\r\n  },\r\n  tableLoadSuccess: (state, action) => {\r\n    return {\r\n      ...state,\r\n      table: action.payload.table,\r\n      isOnProgress: false,\r\n      isError: false,\r\n      maxYear: action.payload.table\r\n        .map(val => val.Year)\r\n        .reduce((a, b) => {\r\n          return Math.max(a, b);\r\n        })\r\n    };\r\n  },\r\n  tableLoadError: (state, action) => {\r\n    return {\r\n      ...state,\r\n      isOnProgress: false,\r\n      isError: true\r\n    };\r\n  },\r\n  updateEditedGrade: (state, action) => {\r\n    const newTable = state.table.map(ele => {\r\n      if (ele.CourseID !== action.payload.course.CourseID) return ele;\r\n      return {\r\n        ...ele,\r\n        EditedGrade: action.payload.course.EditedGrade\r\n      };\r\n    });\r\n    return {\r\n      ...state,\r\n      table: newTable\r\n    };\r\n  }\r\n});\r\n\r\nexport default table;\r\n","import { createReducer } from \"redux-starter-kit\";\r\n\r\nconst defaultState = {\r\n  chat: [],\r\n  newChat: false\r\n};\r\n\r\nconst chat = createReducer(defaultState, {\r\n  haveNew: (state, action) => {\r\n    return {\r\n      ...state,\r\n      newChat: true\r\n    };\r\n  },\r\n  readNew: (state, action) => {\r\n    return {\r\n      ...state,\r\n      newChat: false\r\n    };\r\n  },\r\n  getChat: (state, action) => {\r\n    return {\r\n      ...state,\r\n      chat: [...state.chat, ...action.payload.chat]\r\n    };\r\n  },\r\n  replaceChat: (state, action) => {\r\n    return {\r\n      ...state,\r\n      chat: [...action.payload.chat]\r\n    };\r\n  }\r\n});\r\n\r\nexport default chat;\r\n","import { createReducer } from \"redux-starter-kit\";\r\n\r\nconst defaultState = {\r\n  student: [],\r\n  curr: null\r\n};\r\n\r\nconst adv = createReducer(defaultState, {\r\n  replaceUser: (state, action) => {\r\n    return {\r\n      ...state,\r\n      student: action.payload.student\r\n    };\r\n  },\r\n  changeCurr: (state, action) => {\r\n    return {\r\n      ...state,\r\n      curr: action.payload.curr\r\n    };\r\n  }\r\n});\r\n\r\nexport default adv;\r\n","import { combineReducers } from \"redux\";\r\nimport login from \"./login\";\r\nimport table from \"./table\";\r\nimport chat from \"./chat\";\r\nimport adv from \"./adv\";\r\n\r\nexport default combineReducers({ login, table, chat, adv });\r\n","import { createAction } from \"redux-starter-kit\";\r\n\r\nexport const loginStart = createAction(\"loginStart\");\r\n\r\nexport const loginSuccess = createAction(\r\n  \"loginSuccess\",\r\n  (username, jwt, userType, expireOn, adv?) => {\r\n    return {\r\n      payload: {\r\n        username,\r\n        adv,\r\n        jwt,\r\n        userType,\r\n        expireOn\r\n      }\r\n    };\r\n  }\r\n);\r\n\r\nexport const loginError = createAction(\"loginError\", errInfo => {\r\n  return {\r\n    payload: {\r\n      errInfo\r\n    }\r\n  };\r\n});\r\n\r\nexport const logoutStart = createAction(\"logoutStart\");\r\n\r\nexport const logoutSuccess = createAction(\"logoutSuccess\");\r\n\r\nexport const resumeSession = createAction(\"resumeSession\");\r\n","import _axios from \"axios\";\nimport * as actions from \"../Redux/Actions/loginAction\";\nimport { store } from \"../index\";\n\nconst axios = _axios.create({\n  //baseURL: \"http://localhost:4000/api/auth\"\n  baseURL: window.location.origin + \"/api/auth\"\n});\n\nexport function loggingIn(username: string, password: string) {\n  return dispatch => {\n    dispatch(actions.loginStart());\n    axios\n      .post(\"/login\", {\n        username,\n        password\n      })\n      .then(res => {\n        if (res.status === 200 && res.data.jwt) {\n          dispatch(\n            actions.loginSuccess(\n              res.data.username,\n              res.data.jwt,\n              res.data.userType,\n              res.data.expireOn,\n              res.data.adv\n            )\n          );\n        } else dispatch(actions.loginError(res.data));\n      })\n      .catch(err => {\n        if (err.response) dispatch(actions.loginError(err.response.data));\n        else {\n          dispatch(actions.loginError(null));\n        }\n        console.error(err);\n      });\n  };\n}\n\nexport function loggingOut() {\n  return dispatch => {\n    dispatch(actions.logoutStart());\n    axios\n      .post(\"/logout\", null, {\n        headers: { Authorization: store.getState().login.jwt }\n      })\n      .then(_ => {\n        dispatch(actions.logoutSuccess());\n      })\n      .catch(err => {\n        dispatch(actions.logoutSuccess());\n        console.error(err);\n      });\n  };\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { loggingIn } from \"../../../Service/login-service\";\nimport \"../Login-page.scss\";\n\nfunction errText(info) {\n  if ((info = \"UsnPwd\")) return <p className = \"has-text-danger\">Wrong Username or Password!</p>;\n  return <p className = \"has-text-danger\">Error Occured</p>;\n}\n\nconst LoginForm = ({ dispatch, isError, errInfo }) => {\n  let username;\n  let password;\n\n  return (\n    <>\n      <label className=\"LOGO\">Plan.G</label>\n      <label className=\"LOGO2\">\n        เว็บไซต์ติดตามและเฝ้าระวังการพ้นสภาพนักศึกษา\n      </label>\n      <div className=\"flexbox\">\n        <form\n          onSubmit={e => {\n            e.preventDefault();\n            if (!(username.value.trim() && password.value.trim())) {\n              return;\n            }\n            dispatch(loggingIn(username.value.trim(), password.value.trim()));\n            password.value = \"\";\n          }}\n        >\n          <div className=\"flex-container\">\n            <div className=\"loginbox is-dark\">\n              <div className=\"flex-container lbox\">\n                <div className=\"field top\">\n                  <label className=\"label\">ID</label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"username\"\n                      name=\"username\"\n                      ref={node => (username = node)}\n                    />\n                  </div>\n                </div>\n                <div className=\"field bot\">\n                  <label className=\"label\">Password</label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"password\"\n                      name=\"password\"\n                      ref={node => (password = node)}\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <div className=\"control\">{isError && errText(errInfo)}</div>\n                </div>\n              </div>\n            </div>\n            <div className=\"flexbox\">\n              <div className=\"control\">\n                <button type=\"submit\" className=\"logbutton button is-dark\">\n                  Login\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isError: state.login.isError,\n  errInfo: state.login.errInfo\n});\n\nexport default connect(mapStateToProps)(LoginForm);\n","import React from \"react\";\nimport LoginForm from \"./Login-form/Login-form\";\nimport \"./Login-page.scss\";\n\nclass LoginPage extends React.Component {\n  render() {\n    return (\n      <div className=\"flex-container full\">\n        <LoginForm />\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n","import { createAction } from \"redux-starter-kit\";\r\n\r\nexport const tableLoadStart = createAction(\"tableLoadStart\");\r\n\r\nexport const tableLoadSuccess = createAction(\"tableLoadSuccess\", table => {\r\n  return {\r\n    payload: {\r\n      table\r\n    }\r\n  };\r\n});\r\n\r\nexport const tableLoadError = createAction(\"tableLoadError\");\r\n\r\nexport const updateEditedGrade = createAction(\"updateEditedGrade\", course => {\r\n  return {\r\n    payload: {\r\n      course\r\n    }\r\n  };\r\n});\r\n","import _axios from \"axios\";\nimport * as actions from \"../Redux/Actions/tableAction\";\nimport { store } from \"../index\";\n\nconst axios = _axios.create({\n  //baseURL: \"http://localhost:4000/api/plan\"\n  baseURL: window.location.origin + \"/api/plan\"\n});\n\nexport function getTable(id: string) {\n  return dispatch => {\n    dispatch(actions.tableLoadStart());\n    axios\n      .get(`/${id}`, {\n        headers: { Authorization: store.getState().login.jwt }\n      })\n      .then(val => {\n        dispatch(actions.tableLoadSuccess(val.data));\n      })\n      .catch(err => {\n        dispatch(actions.tableLoadError());\n        console.error(err);\n      });\n  };\n}\n\nexport function supdate(CourseID, Year, Term, EditedGrade) {\n  axios\n    .put(\n      `/${store.getState().login.username}`,\n      {\n        CourseID,\n        Year,\n        Term,\n        EditedGrade\n      },\n      {\n        headers: { Authorization: store.getState().login.jwt }\n      }\n    )\n    .catch(err => {\n      console.error(err);\n    });\n}\n","import React, { useState } from \"react\";\r\nimport { updateEditedGrade } from \"../../Redux/Actions/tableAction\";\r\nimport { connect } from \"react-redux\";\r\nimport { supdate } from \"../../Service/table-service\";\r\n\r\nfunction TableEle({ element, upEditGrade }) {\r\n  const {\r\n    CourseID,\r\n    CourseName,\r\n    CourseCredit,\r\n    Grade,\r\n    Year,\r\n    Term,\r\n    EditedGrade\r\n  } = element;\r\n  const [text, setText] = useState(EditedGrade ? EditedGrade : \"\");\r\n  if (Grade === \"P\" || Grade === \"I\") {\r\n    return (\r\n      <tr>\r\n        <td className=\"has-text-centered\">{CourseID}</td>\r\n        <td className=\"has-text-centered\">{CourseName}</td>\r\n        <td className=\"has-text-centered\">{CourseCredit}</td>\r\n        <td className=\"has-text-centered\">\r\n          <input\r\n            className=\"input is-small has-text-centered\"\r\n            type=\"EditedGrade\"\r\n            value={text}\r\n            onChange={event => {\r\n              const upper = event.target.value.toUpperCase();\r\n              if (\r\n                [\r\n                  \"A\",\r\n                  \"B+\",\r\n                  \"B\",\r\n                  \"C+\",\r\n                  \"C\",\r\n                  \"D+\",\r\n                  \"D\",\r\n                  \"F\",\r\n                  \"S\",\r\n                  \"U\",\r\n                  \"W\",\r\n                  \"V\",\r\n                  \"\"\r\n                ].includes(upper)\r\n              ) {\r\n                setText(upper);\r\n                upEditGrade({\r\n                  ...element,\r\n                  EditedGrade: upper\r\n                });\r\n                supdate(CourseID, Year, Term, upper);\r\n              }\r\n            }}\r\n          />\r\n        </td>\r\n      </tr>\r\n    );\r\n  } else {\r\n    return (\r\n      <tr>\r\n        <td className=\"has-text-centered\">{CourseID}</td>\r\n        <td className=\"has-text-centered\">{CourseName}</td>\r\n        <td className=\"has-text-centered\">{CourseCredit}</td>\r\n        <td className=\"has-text-centered\">{Grade}</td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    upEditGrade: c => dispatch(updateEditedGrade(c))\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(TableEle);\r\n","// pare does this function\nexport function GradeAvg(arr): string {\n  let TotalCredit = 0;\n  let TotalPoint = 0;\n  for (let i in arr) {\n    // console.log(arr[i].CourseCredit+\" \"+arr[i].Grade);\n    if (arr[i].Grade === \"A\") {\n      TotalCredit += arr[i].CourseCredit;\n      let point = arr[i].CourseCredit * 4.0;\n      TotalPoint += point;\n    } else if (arr[i].Grade === \"B+\") {\n      TotalCredit += arr[i].CourseCredit;\n      let point = arr[i].CourseCredit * 3.5;\n      TotalPoint += point;\n    } else if (arr[i].Grade === \"B\") {\n      TotalCredit += arr[i].CourseCredit;\n      let point = arr[i].CourseCredit * 3.0;\n      TotalPoint += point;\n    } else if (arr[i].Grade === \"C+\") {\n      TotalCredit += arr[i].CourseCredit;\n      let point = arr[i].CourseCredit * 2.5;\n      TotalPoint += point;\n    } else if (arr[i].Grade === \"C\") {\n      TotalCredit += arr[i].CourseCredit;\n      let point = arr[i].CourseCredit * 2.0;\n      TotalPoint += point;\n    } else if (arr[i].Grade === \"D+\") {\n      TotalCredit += arr[i].CourseCredit;\n      let point = arr[i].CourseCredit * 1.5;\n      TotalPoint += point;\n    } else if (arr[i].Grade === \"D\") {\n      TotalCredit += arr[i].CourseCredit;\n      let point = arr[i].CourseCredit * 1.0;\n      TotalPoint += point;\n    } else if (arr[i].Grade === \"F\") {\n      TotalCredit += arr[i].CourseCredit;\n      let point = arr[i].CourseCredit * 0.0;\n      TotalPoint += point;\n    } else {\n      continue;\n    }\n  }\n  let Avg = TotalPoint / (TotalCredit ? TotalCredit : 1);\n  return Avg.toFixed(2);\n}\n\nexport function sumCre(arr): number {\n  let credit = 0;\n  arr.forEach(element => {\n    if (\n      element.Grade !== \"W\" &&\n      element.Grade !== \"U\" &&\n      element.Grade !== \"V\" &&\n      element.Grade !== null &&\n      element.Grade !== \"\"\n    )\n      credit += element.CourseCredit;\n  });\n  return credit;\n}\n\nexport function dateChat(time) {\n  let d = new Date();\n  d.setHours(0, 0, 0);\n  const t = new Date(time);\n  if (d.getTime() < time)\n    return (\n      t\n        .getHours()\n        .toString()\n        .padStart(2, \"0\") +\n      \":\" +\n      t\n        .getMinutes()\n        .toString()\n        .padStart(2, \"0\")\n    );\n  return (\n    t.getDate() +\n    \"/\" +\n    t.getMonth() +\n    \"/\" +\n    t\n      .getFullYear()\n      .toString()\n      .slice(2, 4) +\n    \" \" +\n    t\n      .getHours()\n      .toString()\n      .padStart(2, \"0\") +\n    \":\" +\n    t\n      .getMinutes()\n      .toString()\n      .padStart(2, \"0\")\n  );\n}\n","import React from \"react\";\nimport TableEle from \"./Table-ele\";\nimport { GradeAvg, sumCre } from \"../../Service/calc\";\nimport { connect } from \"react-redux\";\n\nfunction TableHead() {\n  return (\n    <thead>\n      <tr>\n        <th className=\"has-text-centered\">รหัสวิชา</th>\n        <th className=\"has-text-centered\">ชื่อวิชา</th>\n        <th className=\"has-text-centered\">หน่วยกิต</th>\n        <th className=\"has-text-centered\">เกรดที่ได้</th>\n      </tr>\n    </thead>\n  );\n}\n\nfunction sumGrade(courses) {\n  const mapped = courses.map(e => {\n    if (e.Grade === \"P\") {\n      return {\n        ...e,\n        Grade: e.EditedGrade\n      };\n    }\n    return e;\n  });\n  const avg = GradeAvg(mapped);\n  const cre = sumCre(mapped);\n  return (\n    <tr>\n      <td colSpan={2} className=\"has-text-right\">\n        หน่วยกิตและเกรดที่ได้ในภาคการศึกษา\n      </td>\n      <td className=\"has-text-centered\">{cre}</td>\n      <td className=\"has-text-centered\">{avg}</td>\n    </tr>\n  );\n}\n\nfunction sumAll(course, allTable) {\n  const stip = allTable.filter(val => {\n    if (val.Year < course.Year) {\n      return val;\n    } else if (val.Year === course.Year && val.Term <= course.Term) return val;\n    return null;\n  });\n  const mapped = stip.map(e => {\n    if (e.Grade === \"P\") {\n      return {\n        ...e,\n        Grade: e.EditedGrade\n      };\n    }\n    return e;\n  });\n  const avg = GradeAvg(mapped);\n  const cre = sumCre(mapped);\n  return (\n    <tr>\n      <td colSpan={2} className=\"coursename has-text-right\">\n        หน่วยกิตและเกรดสะสมทั้งหมด\n      </td>\n      <td className=\"credit has-text-centered\">{cre}</td>\n      <td className=\"grade has-text-centered\">{avg}</td>\n    </tr>\n  );\n}\n\nfunction TableFull({ tid, courses, table }) {\n  if (courses.length === 0) {\n    return <></>;\n  }\n  const sortCourses = courses.sort((a, b) => {\n    if (a.CourseID < b.CourseID) {\n      return -1;\n    }\n    if (a.CourseID > b.CourseID) {\n      return 1;\n    }\n    // a must be equal to b\n    return 0;\n  });\n  return (\n    <table id={tid} className=\"table is-bordered is-striped is-hoverable\">\n      {TableHead()}\n      <tbody>\n        {sortCourses &&\n          sortCourses.map((element, index) => {\n            return <TableEle key={index} element={element} />;\n          })}\n        {courses && sumGrade(sortCourses)}\n        {courses && sumAll(sortCourses[0], table)}\n      </tbody>\n    </table>\n  );\n}\n\nconst mapStateToProps = state => ({\n  table: state.table.table\n});\n\nexport default connect(mapStateToProps)(TableFull);\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Table-page.scss\";\r\nimport { getTable } from \"../../Service/table-service\";\r\nimport TableFull from \"./Table-full\";\r\n\r\nfunction LoopTable(table) {\r\n  const tab = [];\r\n  if (table) {\r\n    for (let i = 1; i < 9; i++) {\r\n      const year = table.filter(tables => {\r\n        return tables.Year === i;\r\n      });\r\n\r\n      for (let j = 1; j < 4; j++) {\r\n        const term = year.filter(year => {\r\n          return year.Term === j;\r\n        });\r\n        // @ts-ignore\r\n        tab.push(\r\n          <TableFull key={i + \"\" + j} courses={term} tid={\"y\" + i + j} />\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return tab;\r\n}\r\n\r\nclass TableForm extends React.Component {\r\n  componentDidMount() {\r\n    // @ts-ignore\r\n    this.props.getTable(this.props.id);\r\n  }\r\n\r\n  render() {\r\n    // @ts-ignore\r\n    const { table } = this.props;\r\n\r\n    return (\r\n      <div className=\"flexbox\">\r\n        <div className=\"flex-container\">{LoopTable(table)}</div>\r\n      </div>\r\n      /*<div className=\"flexbox\">\r\n        <div className=\"flex-container\">\r\n          <table className=\"table is-bordered is-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"has-text-centered\">\r\n                  <abbr title=\"Classid\">รหัสวิชา</abbr>\r\n                </th>\r\n                <th className=\"has-text-centered\">\r\n                  <abbr title=\"Classname\">ชื่อวิชา</abbr>\r\n                </th>\r\n                <th  className=\"has-text-centered\">\r\n                  <abbr title=\"Credit\">หน่วยกิจ</abbr>\r\n                </th>\r\n                <th  className=\"has-text-centered\">\r\n                  <abbr title=\"Grade\">เกรดที่ได้</abbr>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {table &&\r\n                table.map((element, index) => {\r\n\r\n                  return <TableEle key={index} element={element} />;\r\n                })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>*/\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  table: state.table.table\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    getTable: () => dispatch(getTable(ownProps.id))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableForm);\r\n","import React from \"react\";\r\nimport TableForm from \"./Table-form\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction TablePage() {\r\n  return (\r\n    // @ts-ignore\r\n    <TableForm id={useParams().id} />\r\n  );\r\n}\r\n\r\nexport default TablePage;\r\n","import React from \"react\";\r\nimport \"./Chat.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { dateChat } from \"../../Service/calc\";\r\n\r\nfunction MessageBox({ mes, userType }) {\r\n  if (mes.SentBy === userType) {\r\n    return (\r\n      <div className=\"Messboxcontairne r\">\r\n        <p>{dateChat(mes.Time)}</p>\r\n        <div className=\"sendMesscontainer\">\r\n          <p className=\"phar\">{mes.Message}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"Messboxcontairne l\">\r\n        <div className=\"revMesscontainer\">\r\n          <p className=\"phar\">{mes.Message}</p>\r\n        </div>\r\n        <p>{dateChat(mes.Time)}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userType: state.login.userType\r\n});\r\n\r\nexport default connect(mapStateToProps)(MessageBox);\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTooNew, sendMessage } from \"../../Service/chat-service\";\nimport \"./Chat.scss\";\nimport MessageBox from \"./Message-box\";\n\nclass ChatStudentForm extends React.Component {\n  messagesEnd: any;\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  componentDidMount() {\n    // @ts-ignore\n    this.props.newChat();\n    this.scrollToBottom();\n  }\n\n  handleChange(event) {\n    this.setState({ text: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    // @ts-ignore\n    const { text } = this.state;\n    // @ts-ignore\n    this.props.send(this.props.adv, text);\n    this.setState({ text: \"\" });\n  }\n\n  handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      this.handleSubmit(event);\n    }\n  };\n\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  render() {\n    // @ts-ignore\n    const { chat } = this.props;\n    // @ts-ignore\n    const { text } = this.state;\n    let mes = [...chat];\n\n    if (mes.length > 1)\n      mes.sort((a, b) => {\n        return a.Time - b.Time;\n      });\n\n    return (\n      <div className=\"full\">\n        <div className=\"chatcontainer\">\n          <div className=\"sendcontainer\">\n            <input\n              className=\"Mesinputbox input is-small\"\n              type=\"Meassage\"\n              value={text}\n              onChange={this.handleChange}\n              onKeyPress={this.handleKeyPress}\n            />\n            <button\n              className=\"sendbutton button is-small \"\n              type=\"submit\"\n              onClick={this.handleSubmit}\n            >\n              Send\n            </button>\n          </div>\n          <div className=\"chatfeedbox\">\n            {mes.length > 1 &&\n              mes.map((val, index) => <MessageBox key={index} mes={val} />)}\n            <div\n              style={{ float: \"left\", clear: \"both\" }}\n              ref={el => {\n                this.messagesEnd = el;\n              }}\n            ></div>\n          </div>\n          <span id=\"bot\"></span>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  chat: state.chat.chat,\n  adv: state.login.adv\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    newChat: () => dispatch(getTooNew()),\n    send: (to, message) => dispatch(sendMessage(to, message))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatStudentForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { loggingOut } from \"../../../Service/login-service\";\nimport { Link } from \"react-router-dom\";\n\nconst NavbarEnd = ({ dispatch, userType, isTablepage }) => {\n  return (\n    <div className=\"navbar-item\">\n      <div className=\"field is-grouped\">\n        {isTablepage && (\n          <p className=\"control\">\n            <Link to={`${userType === \"student\" ? \"/chat\" : \"/adv\"}`}>\n              <button className=\"button is-primary\">\n                <span className=\"icon\">\n                  <i className=\"fas fa-comment\"></i>\n                </span>\n                <span>Chat</span>\n              </button>\n            </Link>\n          </p>\n        )}\n        {!isTablepage && userType === \"student\" && (\n          <p className=\"control\">\n            <Link to=\"/table\">\n              <button className=\"button is-primary\">\n                <span className=\"icon\">\n                  <i className=\"fas fa-table\"></i>\n                </span>\n                <span>Table</span>\n              </button>\n            </Link>\n          </p>\n        )}\n        <p className=\"control\">\n          <button\n            className=\"button is-danger\"\n            onClick={() => dispatch(loggingOut())}\n          >\n            <span className=\"icon\">\n              <i className=\"fas fa-sign-out-alt\"></i>\n            </span>\n            <span>Logout</span>\n          </button>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  userType: state.login.userType\n});\n\nexport default connect(mapStateToProps)(NavbarEnd);\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst NavForTable = ({ maxYear }) => {\r\n  if (maxYear) {\r\n    let year = [];\r\n    for (let i = 1; i <= maxYear; i++) {\r\n      year.push(\r\n        <a key={i} href={`#y${i}1`} className=\"navbar-item\">\r\n          ปี {i}\r\n        </a>\r\n      );\r\n    }\r\n    return <>{year}</>;\r\n  }\r\n  return <></>;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  maxYear: state.table.maxYear\r\n});\r\n\r\nexport default connect(mapStateToProps)(NavForTable);\r\n","import React from \"react\";\nimport NavbarEnd from \"./Navbar-end/Navbar-end\";\nimport \"./Navbar.scss\";\nimport NavForTable from \"./Nav-for-table/Nav-for-table\";\nimport PropTypes from \"prop-types\";\n\nclass Navbar extends React.Component {\n  static propTypes = {\n    isTablePage: PropTypes.bool\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle(e) {\n    e.preventDefault();\n    // @ts-ignore\n    this.setState({ active: !this.state.active });\n  }\n  render() {\n    // @ts-ignore\n    const { active } = this.state;\n    // @ts-ignore\n    const { isTablePage } = this.props;\n    return (\n      <nav\n        className=\"navbar is-fixed-top is-dark\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className={`navbar-brand ${active ? \"is-active\" : \"\"}`}>\n          <a className=\"navbar-item logo\" href=\"#top\">\n            Plan.G\n          </a>\n          <a\n            role=\"button\"\n            className=\"navbar-burger burger\"\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"nav\"\n            href=\"#toggle\"\n            onClick={this.handleToggle}\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n        <div id=\"nav\" className={`navbar-menu ${active ? \"is-active\" : \"\"}`}>\n          <div className=\"navbar-start\">{isTablePage && <NavForTable />}</div>\n          <div className=\"navbar-end\">\n            <NavbarEnd isTablepage={isTablePage} />\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"./Adv.scss\"\n\nfunction retiredStr(per) {\n  per = 100 - per;\n  if (per <= 0) return <p className=\"PerFailed cri\">Critical</p>;\n  else if (per <= 33) return <p className=\"PerFailed hi\">High</p>;\n  else if (per <= 50) return <p className=\"PerFailed med\">Medium</p>;\n  else return <p className=\"PerFailed lo\">Low</p>;\n}\n\nfunction StdBox({ student }) {\n  return (\n    <Link to={`/adv/${student.StudentID}`}>\n      <div\n        className={`stdcontainer ${\n          student.StudentID === useParams().pid ? \"selected\" : \"\"\n        }`}\n      >\n        <div className=\"profilebox\">\n          <div className=\"studenprofile\">\n            <p className=\"sId\">{student.StudentID}</p>\n            {retiredStr(student.PerFailed)}\n          </div>\n          <p className=\"Sname\">{student.StdName}</p>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nexport default StdBox;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../Chat-page/Chat.scss\";\nimport \"./Adv.scss\";\nimport StdBox from \"./Student-box\";\nimport { getStudent } from \"../../Service/adv-service\";\n\n\nclass AdvStd extends React.Component {\n  componentDidMount() {\n    // @ts-ignore\n    this.props.stdGet()\n  }\n  render() {\n    // @ts-ignore\n    const { students } = this.props;\n    return (\n      <div className=\"stdlistcontain\">\n        {students && students.map((val, index) => {\n          return <StdBox key={index} student={val} />;\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  students: state.adv.student\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    stdGet: () => dispatch(getStudent())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdvStd);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Adv.scss\";\nimport MessageBox from \"../Chat-page/Message-box\";\n\nclass AdvChatBox extends React.Component {\n  messagesEnd: any;\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  render() {\n    // @ts-ignore\n    const { chat } = this.props;\n    let mes = [...chat];\n\n    if (mes.length > 1)\n      mes.sort((a, b) => {\n        return a.Time - b.Time;\n      });\n\n    return (\n      <>\n        {mes.length > 1 &&\n          mes.map((val, index) => <MessageBox key={index} mes={val} />)}\n        <div\n          style={{ float: \"left\", clear: \"both\" }}\n          ref={el => {\n            this.messagesEnd = el;\n          }}\n        ></div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  chat: state.chat.chat\n});\n\nexport default connect(mapStateToProps)(AdvChatBox);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { sendMessage } from \"../../Service/chat-service\";\nimport { useParams } from \"react-router-dom\";\nimport { changeCurr } from \"../../Redux/Actions/advAction\";\nimport \"./Adv.scss\";\nimport { Link } from \"react-router-dom\";\nimport AdvChatBox from \"./Advisor-chatbox\";\n\nfunction AdvChat({ username, chat, send, changeCurr, student }) {\n  let text;\n  const { pid } = useParams();\n  const std = student.find(usn => usn.StudentID === username);\n  changeCurr(pid);\n  return (\n    <div className=\"full\">\n      <div className=\"chatcontainer\">\n        <div className=\"sendcontainer\">\n          <input\n            className=\"Mesinputbox input is-small\"\n            type=\"Message\"\n            ref={node => (text = node)}\n            onKeyPress={event => {\n              if (event.key === \"Enter\") {\n                send(pid, text.value);\n                text.value = \"\";\n              }\n            }}\n          />\n          <button\n            className=\"sendbutton button is-small \"\n            type=\"submit\"\n            onClick={() => {\n              send(pid, text.value);\n              text.value = \"\";\n            }}\n          >\n            Send\n          </button>\n        </div>\n        <div className=\"chatfeedbox\">\n          <AdvChatBox />\n        </div>\n        <span id=\"bot\"></span>\n        <div className=\"talkwith\">\n          <p className=\"stdname\">\n            {std.StdName} {std.StdSurname}\n          </p>\n          <Link className=\"tablebutton\" to={`/table/${pid}`}>\n            <i className=\"fas fa-table\"></i>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  chat: state.chat.chat,\n  adv: state.login.adv,\n  student: state.adv.student\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    send: (to, message) => dispatch(sendMessage(to, message)),\n    changeCurr: curr => dispatch(changeCurr(curr))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdvChat);\n","import React from \"react\";\nimport Lottie from \"lottie-react-web\";\nimport animation from \"./ChatBubble.json\";\n\nexport default class AdvLottieControl extends React.Component {\n  render() {\n    return (\n      <div className=\"full lott\">\n        <Lottie\n          options={{\n            animationData: animation\n          }}\n          width=\"500px\"\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport AdvStd from \"./Advisor-Std\";\nimport { useParams } from \"react-router-dom\";\nimport AdvChat from \"./Advisor-chat\";\nimport \"./Adv.scss\";\nimport { getTooNew } from \"../../Service/chat-service\";\nimport { connect } from \"react-redux\";\nimport AdvLottieControl from \"./Adv.-lottie\";\n\nfunction AdvPage({ dispatch }) {\n  let { pid } = useParams();\n  if (pid) {\n    dispatch(getTooNew(pid));\n  }\n  return (\n    <div className=\"Advflex-container full\">\n      <AdvStd />\n      <div className = \"Advchatcontainer\">{pid && <AdvChat username={pid} />}{!pid && <AdvLottieControl />}</div>\n    </div>\n  );\n}\n\nexport default connect()(AdvPage);\n","import React, { Component } from \"react\";\r\nimport \"./App.scss\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport LoginPage from \"../Login-page/Login-page\";\r\nimport { connect } from \"react-redux\";\r\nimport TablePage from \"../Table-page/Table-page\";\r\nimport ChatPage from \"../Chat-page/Chat-student-form\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport { resumeSession } from \"../../Redux/Actions/loginAction\";\r\nimport AdvPage from \"../Advisor-page/Advisor-page\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    // @ts-ignore\r\n    this.props.resume();\r\n  }\r\n  render() {\r\n    // @ts-ignore\r\n    const { isLogin, userType, username } = this.props;\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            {isLogin ? <Redirect to=\"/redir\" /> : <Redirect to=\"/login\" />}\r\n          </Route>\r\n          <Route path=\"/redir\">\r\n            {userType === \"student\" ? (\r\n              <Redirect to={`/table/${username}`} />\r\n            ) : (\r\n              <Redirect to=\"/adv\" />\r\n            )}\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            {isLogin ? <Redirect to=\"/redir\" /> : <LoginPage />}\r\n          </Route>\r\n          <Route path=\"/table/:id\">\r\n            <Navbar isTablePage={true} />\r\n            {isLogin ? <TablePage /> : <Redirect to=\"/login\" />}\r\n          </Route>\r\n          <Route path=\"/table\">\r\n            {userType === \"student\" ? (\r\n              <Redirect to={`/table/${username}`} />\r\n            ) : (\r\n              <Redirect to=\"/adv\" />\r\n            )}\r\n          </Route>\r\n          <Route path=\"/chat\">\r\n            <Navbar />\r\n            {isLogin ? <ChatPage /> : <Redirect to=\"/login\" />}\r\n          </Route>\r\n          <Route path=\"/adv/:pid\">\r\n            <Navbar />\r\n            {isLogin ? <AdvPage /> : <Redirect to=\"/login\" />}\r\n          </Route>\r\n          <Route path=\"/adv/\">\r\n            <Navbar />\r\n            {isLogin ? <AdvPage /> : <Redirect to=\"/login\" />}\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLogin: state.login.isLogin,\r\n  userType: state.login.userType,\r\n  username: state.login.username\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    resume: () => dispatch(resumeSession())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { configureStore, getDefaultMiddleware } from \"redux-starter-kit\";\nimport rootReducer from \"./Redux/Reducers\";\nimport App from \"./Components/App/App\";\nimport \"@fortawesome/fontawesome-free/js/all\";\nimport SmoothScroll from \"smooth-scroll\";\n\n// eslint-disable-next-line\nconst scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 300,\n  easing: \"easeInOutQuart\",\n  clip: true,\n  offset: 100\n});\n\nfunction configureAppStore(preloadedState?) {\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: [...getDefaultMiddleware()],\n    preloadedState\n  });\n\n  return store;\n}\n\nexport const store = configureAppStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}